{"version":3,"sources":["components/login.component.js","components/signup.component.js","components/dashboard.component.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","loading","handleChange","e","setState","target","name","value","submit","payload","axios","post","then","response","props","history","push","data","error","alert","console","log","event","preventDefault","className","id","to","style","width","type","placeholder","this","onChange","onClick","Component","SignUp","disableBrowserBackButton","options","label","Dashboard","time","date","undefined","showModal","search","window","location","token","URLSearchParams","get","Date","getDate","getMonth","getFullYear","headers","logout","header","open","bind","Button","variant","Modal","show","Header","Title","Body","handleChangeTime","marginTop","minDate","moment","toDate","dateFormat","placeholderText","selected","Footer","Card","Text","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0645075a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './theme.css'\n\n\nexport default class Login extends Component {\n    state = {email: '', password: '', loading: false};\n\n    handleChange = e =>{\n        this.setState({[e.target.name] : e.target.value });\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();\n      }\n\n    render() {\n        return (\n          <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <div className=\"center\">\n            <form>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\"  style={{width: 250}}>\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name='email'  value={this.state.email} onChange={e=>this.handleChange(e)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name='password' value={this.state.password} onChange={e=>this.handleChange(e)}/>\n                </div>\n              <button type=\"button\" className=\"btn btn-primary btn-block\" onClick = {this.submit} >Login</button>\n\n            </form>\n            </div>\n            </div>\n\n        );\n    }\n\n    submit = e => {\n    const payload = {\n    email: this.state.email,\n    password: this.state.password\n    }\n    axios.post('https://bipolar-backend.herokuapp.com/login', payload)\n      .then((response) => {\n        this.props.history.push('/dashboard?token='+response.data);\n        \n      }, (error) => {\n        alert(error.response.data)\n        console.log(error);\n      });\n    \n    } \n  \n\n}\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './theme.css'\n\n\nexport default class SignUp extends Component {\n    state = {email: '', password: '', name: ''};\n\n    handleChange = e =>{\n        this.setState({[e.target.name] : e.target.value });\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();\n      }\n    render() {\n        return (\n          <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <div className=\"center\">\n            <form>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\" style={{width: 250}}>\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name='name'  value={this.state.name} onChange={e=>this.handleChange(e)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name='email'  value={this.state.email} onChange={e=>this.handleChange(e)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name='password'  value={this.state.password} onChange={e=>this.handleChange(e)}/>\n                </div>\n\n                <button type=\"button\" className=\"btn btn-primary btn-block\" onClick = {this.submit} >Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered  <Link to=\"/sign-in\">sign in?</Link>        \n                </p>\n            </form>\n            </div>\n            </div>\n        );\n    }\n\n    submit = e => {\n        const payload = {\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n        }\n        axios.post('https://bipolar-backend.herokuapp.com/signup', payload)\n          .then((response) => {\n            console.log(response.data)\n          }, (error) => {\n            alert(error.response.data)\n            console.log(error);\n          });\n        \n        }\n}","import React, { Component } from \"react\";\nimport  './dashboard.css';\nimport { Card, Button, Modal } from 'react-bootstrap';\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from \"react-datepicker\";\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\ndisableBrowserBackButton();\n\nconst options = [\n  { value: '10AM - 11AM', label: '10AM - 11AM' },\n  { value: '11AM - 12AM', label: '11AM - 12PM' },\n  { value: '12PM - 1PM', label: '12PM - 1PM' },\n  { value: '1PM - 2PM', label: '1PM - 2PM' },\n  { value: '2PM - 3PM', label: '2PM - 3PM' },\n  { value: '3PM - 4PM', label: '3PM - 4PM' },\n  { value: '4PM - 5PM', label: '4PM - 5PM' },\n  { value: '5PM - 6PM', label: '5PM - 6PM' },\n  { value: '6PM - 7PM', label: '6PM - 7PM' },\n  { value: '7PM - 8PM', label: '7PM - 8PM' },\n  { value: '8PM - 9PM', label: '8PM - 9PM', className: 'myOptionClassName' },\n]\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          date: '',\n          time :'',\n          showModal: false,\n          name : ''\n    \n        };\n        this.handleChange = this.handleChange.bind(this);\n    \n      }\n    \n      handleChange(date) {\n        this.setState({\n          date: date\n        });\n      }\n\n      handleChangeTime(time){\n          this.setState({\n              time: time\n          })\n      }\n\n      submit = e => {\n          if(this.state.time.value === '' || this.state.date === '' || this.state.time.value === undefined){\n            alert('Enter Details');\n            this.setState({ showModal: false })\n\n          }\n          else{\n            let search = window.location.search;\n            let params = new URLSearchParams(search);\n            let token = params.get('token');\n            const payload = {\n                name: this.state.name,\n                date: new Date(this.state.date).getDate() + '/' + (new Date(this.state.date).getMonth()+1) + '/' + new Date(this.state.date).getFullYear(),\n                time: this.state.time.value\n                }\n                const headers = {\n                    'Content-Type': 'application/json',\n                    'x-auth': token\n                  }\n                axios.post('https://bipolar-backend.herokuapp.com/book', payload,{\n                    headers: headers\n                  })\n                  .then((response) => {\n                    this.setState({ showModal: false })\n                    alert(response.data)\n                }, (error) => {\n                    this.setState({ showModal: false })\n                      alert(error.response.data)\n                    });\n          }\n        \n            } \n      \n            logout = e =>{\n                let search = window.location.search;\n                let params = new URLSearchParams(search);\n                let token = params.get('token');\n                    const header = {\n                        'Content-Type': 'application/json',\n                        'x-auth': token\n                      }\n                    axios.post('https://bipolar-backend.herokuapp.com/logout',{},{\n                        headers: header\n                      })\n                      .then((response) => {\n                        alert(response.data)\n                        this.props.history.push('/sign-in');\n                    }, (error) => {\n                          alert(error.response.data)\n                        window.open('/dashboard?token='+token, \"home\") \n                      });\n                    } \n            \n\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n            <div className=\"container\">\n              <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Button variant=\"primary\" onClick={this.logout}>Logout</Button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n          <div className=\"center\">\n            <Modal show={this.state.showModal}>\n              <Modal.Header >\n                <Modal.Title>Booking Portal</Modal.Title>\n              </Modal.Header>\n    \n              <Modal.Body>\n                <Dropdown options={options}        \n                    value={this.state.time}  \n                    placeholder=\"Select an option\" \n                    onChange={(time) => this.handleChangeTime(time)}\n                />\n                <div style={{marginTop: '10px'}}>\n                    <DatePicker\n                    minDate={moment().toDate()}\n                    dateFormat = 'dd/MM/yyyy'\n                    placeholderText = 'Select Date'\n                    selected = {this.state.date}\n                    onChange={(date) => this.handleChange(date)}\n                    value={this.state.date}\n                    />\n                </div>\n              </Modal.Body>\n    \n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => this.setState({ showModal: false })}>Close</Button>\n                <Button variant=\"primary\" onClick = {this.submit}>Submit</Button>\n              </Modal.Footer>\n            </Modal>\n            <Card>\n              <Card.Body>\n                <Card.Title>Tennis Court</Card.Title>\n                <Card.Text>\n                A tennis court is the venue where the sport of tennis is played. It is a firm rectangular surface with a low net stretched across the centre.\n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Tennis Court' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Body>\n                <Card.Title>Swimming Pool</Card.Title>\n                <Card.Text>\n                A swimming pool, swimming bath, wading pool, paddling pool, or simply pool is a structure designed to hold water to enable swimming or other leisure activities.\n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Swimming Pool' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Body>\n                <Card.Title>Badminton Court</Card.Title>\n                <Card.Text>\n                The full length of the court is 13.4 metres (44 ft). The service courts are marked by a centre line dividing the width of the court.\n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Badminton Court' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Body>\n                <Card.Title>Gym</Card.Title>\n                <Card.Text>\n                Gym is a covered location for athletics. Gym is also slang for \"fitness centre\", which is often an area for indoor recreation\n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Gym' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Body>\n                <Card.Title>Club House</Card.Title>\n                <Card.Text>\n                Clubhouse may refer to: The meetinghouse of: A club (organization), an association of two or more people united by a common interest or goal.\n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Club House' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Body>\n                <Card.Title>Cycle tracks</Card.Title>\n                <Card.Text>\n                A cycle track, separated bike lane or protected bike lane is an exclusive bikeway that has elements of a separated path and on-road bike lane. \n        </Card.Text>\n                <Button variant=\"primary\" onClick={() => this.setState({ showModal: true, name : 'Cycle tracks' })}>Book Now</Button>\n              </Card.Body>\n            </Card>\n          </div>\n          </div>\n        );\n      }\n\n}\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport Dashboard from \"./components/dashboard.component\";\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route path=\"/sign-in\" component={Login} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </div>\n      </div>\n    </div></Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}